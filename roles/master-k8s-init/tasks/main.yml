---
- name: Ensuring /home/vagrant/kubeadm dir exists in master machine
  file:
    path: /home/vagrant/kubeadm
    state: directory

- name: Importing kubeadm-config.yaml manifest
  copy:
    src: "{{ resources_path }}kubeadm/kubeadm-config.yaml"
    dest: /home/vagrant/kubeadm

- name: Injecting node ip in kubeadm config file
  command: "sed -i 's/ANSIBLE_NODE_IP/{{ node_ip }}/' kubeadm/kubeadm-config.yaml"

# - name: Initializing the Kubernetes cluster using kubeadm through CLI options
#   command: kubeadm init --apiserver-advertise-address="192.168.56.10" --apiserver-cert-extra-sans="192.168.56.10"  --node-name k8s-master --pod-network-cidr=192.168.0.0/16

- name: Initializing the Kubernetes cluster using kubeadm through a config manifest
  command: "{{ item }}"
  with_items:
    - echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
    - kubeadm init --config kubeadm/kubeadm-config.yaml
    # - mkdir -p $HOME/.kube
    # - sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    # - sudo chown $(id -u):$(id -g) $HOME/.kube/config

# - name: kubeadm cluster authorization
#   command: export KUBECONFIG=/etc/kubernetes/admin.conf

- name: Setting up kubeconfig for Vagrant user
  command: "{{ item }}"
  with_items:
   - mkdir -p /home/vagrant/.kube
   - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
   - chown vagrant:vagrant /home/vagrant/.kube/config

- name: Generating join command
  command: kubeadm token create --print-join-command
  register: join_command

- name: Saving join command to tmp file
  shell: "echo {{ join_command.stdout_lines[0] }} >> /tmp/join-command.sh"

- name: Exporting join command to host machine for propagation
  fetch:
    src: /tmp/join-command.sh
    dest: "{{ resources_path }}kubeadm/join-command"
