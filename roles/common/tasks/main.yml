---
- name: Obtaining node_ip var from eth1 ipv4 address
  set_fact:
    node_ip: "{{ ansible_eth1.ipv4.address }}"

- name: Installing common packages
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common
    - unzip

- name: Installing packages to sync clock between nodes
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - ntp
    - ntpdate

- name: Adding an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Adding apt repository for stable version of Docker
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    state: present

- name: Installing Docker and its dependencies
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce
    - docker-ce-cli
    - containerd.io

- name: Adding Vagrant user to Docker group
  user:
    name: vagrant
    group: docker

- name: Setting Docker cgroup driver to systemd to match kubelet
  ansible.builtin.copy:
    content: '{ "exec-opts": ["native.cgroupdriver=systemd"] }'
    dest: /etc/docker/daemon.json

- name: Reloading Docker services
  command: "{{ item }}"
  with_items:
    - sudo systemctl daemon-reload
    - sudo systemctl restart docker
    - systemctl enable docker.service
    - systemctl start docker.service

- name: Adding the apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Giving the node ip to kubelet extra args
  lineinfile:
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
    create: yes

- name: Installing Kubernetes binaries
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet=1.23.*
      - kubeadm=1.23.*
      - kubectl=1.23.*

- name: Enabling kubelet service
  command: "{{ item }}"
  with_items:
    - sudo systemctl enable --now kubelet

- name: Disabling swap
  command: "{{ item }}"
  with_items:
    - sudo swapoff -a
    - sudo sed -i '/ swap / s/^/#/' /etc/fstab
  when: ansible_swaptotal_mb > 0
